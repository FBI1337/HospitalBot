import re
from telebot import types
from database import get_users
from config import ADMIN_USERS
from config import admin_password


admin_chat_sessions = {}
active_chats = {}

def admin(bot):
    
    @bot.message_handler(commands=['admin'])
    def handle_admin(message):
        user_id = message.from_user.id
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å:")
        bot.register_next_step_handler(message, process_admin_password_step)  
        
    @bot.message_handler(commands=['end_chat'])
    def handle_end_chat_command(message):
        end_chat(message.chat.id)
    
    @bot.message_handler(func=lambda message: message.text == '–ë–æ–ª—å–Ω–∏—Ü–∞')
    def handle_hospital(message):
        markup = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
        user_list_button = types.KeyboardButton('–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π')
        doctor_management_button = types.KeyboardButton('–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Ä–∞—á–∞–º–∏')
        back_button = types.KeyboardButton('–ù–∞–∑–∞–¥')
        markup.add(user_list_button, doctor_management_button, back_button)
        bot.send_message(message.chat.id, "–í—ã –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–π –ø–∞–Ω–µ–ª–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)
    
    @bot.message_handler(func=lambda message: message.text == 'üòà')
    def handle_devil(message):
        markup = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
        send_message_button = types.KeyboardButton('–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é')
        end_chat_button = types.KeyboardButton('–ó–∞–≤–µ—Ä—à–∏—Ç—å —á–∞—Ç')
        back_button = types.KeyboardButton('–ù–∞–∑–∞–¥')
        markup.add(send_message_button, back_button,  end_chat_button)
        bot.send_message(message.chat.id, "–í—ã –≤ —Ä–∞–∑–¥–µ–ª–µ üòà. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)
        
    @bot.message_handler(func=lambda message: message.text == '–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é')
    def handle_send_message_button(message):
        msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")
        bot.register_next_step_handler(msg, process_user_id_step)

    @bot.message_handler(func=lambda message: True)
    def handle_user_reply(message):
        if message.chat.id in admin_chat_sessions.values():
            admin_id = next(key for key, value in admin_chat_sessions.items() if value == message.chat.id)
            bot.send_message(chat_id=admin_id, text=f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.chat.id} –æ—Ç–≤–µ—á–∞–µ—Ç: {message.text}")
        elif message.chat.id in active_chats:
            bot.send_message(message.chat.id, "–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ.")
        else:
            bot.send_message(message.chat.id, "–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ.")
    
    @bot.message_handler(func=lambda message: message.text == '–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π')
    def handle_user_list(message):
        markup = types.ReplyKeyboardMarkup(row_width=3, resize_keyboard=True)
        view_button = types.KeyboardButton('–ü—Ä–æ—Å–º–æ—Ç—Ä')
        add_button = types.KeyboardButton('–î–æ–±–∞–≤–∏—Ç—å')
        delete_button = types.KeyboardButton('–£–¥–∞–ª–∏—Ç—å')
        back_button = types.KeyboardButton('–ù–∞–∑–∞–¥')
        markup.add(view_button, add_button, delete_button, back_button)
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:", reply_markup=markup)
    
    @bot.message_handler(func=lambda message: message.text == '–ü—Ä–æ—Å–º–æ—Ç—Ä')
    def handle_view_users(message):
        users = get_users()
        if not users:
            bot.send_message(message.chat.id, "–í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
            return

        response = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:\n\n"
        for user in users:
            response += (
                f"user_id: {user[0]}\n"
                f"–ò–º—è: {user[1]}\n"
                f"–§–∞–º–∏–ª–∏—è: {user[2]}\n"
                f"–ê–¥—Ä–µ—Å: {user[3]}\n"
                f"–ù–æ–º–µ—Ä –ø–æ–ª–∏—Å–∞: {user[4]}\n"
                f"–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {user[5]}\n"
                f"–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {user[6]}\n\n"
            )      
        bot.send_message(message.chat.id, response)
    
    @bot.message_handler(func=lambda message: message.text == '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Ä–∞—á–∞–º–∏')
    def handle_doctor_management(message):
        bot.send_message(message.chat.id, "–ó–¥–µ—Å—å –±—É–¥–µ—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Ä–∞—á–∞–º–∏.")
    
    @bot.message_handler(func=lambda message: message.text == '–ù–∞–∑–∞–¥')
    def handle_back(message):
        send_admin_menu(bot, message)


    @bot.message_handler(func=lambda message: message.text == "–ó–∞–≤–µ—Ä—à–∏—Ç—å —á–∞—Ç")            
    def handle_end_chat(message):
        end_chat(message.chat.id)
            
            
    def process_user_id_step(message):
        try:
            user_id = int(message.text)
            msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:")
            admin_chat_sessions[message.chat.id] = user_id
            active_chats[user_id] = True
            bot.register_next_step_handler(msg, process_message_step)
        except ValueError:
            bot.send_message(message.chat.id, "ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–∏—Å–ª–æ–º.")

    def process_message_step(message):
        if message.text == '–ó–∞–≤–µ—Ä—à–∏—Ç—å —á–∞—Ç': 
            end_chat(message.chat.id)
        else:      
            admin_id = message.chat.id
            user_id = admin_chat_sessions.get(admin_id)
            if user_id:
                text = message.text
                if send_message_to_user(bot, user_id, text):
                    markup = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
                    end_chat_button = types.KeyboardButton('–ó–∞–≤–µ—Ä—à–∏—Ç—å —á–∞—Ç')
                    markup.add(end_chat_button)
                    bot.send_message(message.chat.id, "–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ. –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å –ø–µ—Ä–µ–ø–∏—Å–∫—É.", reply_markup=markup)
                    # Register next step to continue chatting
                    bot.register_next_step_handler(message, process_message_step)
                else:
                    bot.send_message(message.chat.id, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è.")
            else:
                bot.send_message(message.chat.id, "–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è.")
            
    def send_message_to_user(bot, user_id, text):
        try:
            bot.send_message(chat_id=user_id, text=text)
            return True
        except Exception as e: 
            print(f"Error sending message: {str(e)}")
            return False
    
    def process_admin_password_step(message):
        user_id = message.from_user.id
        if message.text == admin_password:
            if user_id in ADMIN_USERS:
                send_admin_menu(bot, message)
            else:
                bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
        else:
            bot.send_message(message.chat.id, "–ù–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–∞—Ä–æ–ª—å.")
            handle_admin(message)
            
    def send_admin_menu(bot, message):
        markup = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
        hospital_button = types.KeyboardButton('–ë–æ–ª—å–Ω–∏—Ü–∞')
        devil_button = types.KeyboardButton('üòà')
        markup.add(hospital_button, devil_button)
        bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)

    def send_message_to_user(bot, user_id, text):
        try:
            bot.send_message(chat_id=user_id, text=text)
            return True
        except Exception as e:
            print(f"Error sending message: {str(e)}")
            return False
        
        
    def end_chat(admin_id):
        if admin_id in admin_chat_sessions:
            user_id = admin_chat_sessions[admin_id]
            del admin_chat_sessions[admin_id]
            if user_id in active_chats:
                del active_chats[user_id]
            bot.send_message(admin_id, "–ß–∞—Ç –∑–∞–≤–µ—Ä—à–µ–Ω.")
            bot.send_message(bot, bot.send_message(admin_id, "–í—ã –∑–∞–≤–µ—Ä—à–∏–ª–∏ —á–∞—Ç"))
        else:
            bot.send_message(admin_id, "–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —á–∞—Ç–∞.")